* Maps are formatted with a custom config syntax 
* first put the command name then the value between { }
* like so : command{value}

* Some commands require you to have a string, character, integer, or real value

* Will define the name of the map (currently not used) {string}
-> name{coucou}

* Defines the width of the map (x) {int}
-> width{20}

* Defines the height of the map (y) {int}
-> height{20}

* defines the floor and ceiling color 
* {int(floor red) int(floor green) int(floor blue), 
* int(ceiling red) int(ceiling green) int(ceiling blue)}
-> sky{237 157 95, 252 231 227}

* Creates a wall identified by a character. This character has
* to be placed on the map wherever the wall must be placed
* {character, string(texture name), int(1 for solid, 0 for not solid)
-> wall{O, wall, 1}
-> wall{U, wall_portrait, 1}
-> wall{A, wall_hole, 0}

* Same as wall, but for billboards
-> billboard{X, pillar, 0}

* Same as wall, but for animated objects (might be subject to changes)
-> animation{W, mul_test, 1}

* Same as wall, but for making doors. You can choose the opening direction and the speed
* {character, string, float(x) float(y) float(z), 
* int(direction: 0 is vertical. 1 is horizontal. or the other way around), float(opening time)}
-> door{-, wall_portrait, 0 0 -0.9, 1, 1000}
-> door{|, wall_portrait, 0.9 0 0, 0, 350}
-> door{_, pillar, 0 -0.9 0, 1, 1000}

* Map is used to represent what the map will look like in game, using 
* previously defined characters
* Width and height MUST match previously defined values
* Any non-existant character will be ignored
* Map must be surrounded by walls otherwise player might escape
-> map{
OOOOOOOOOOOOOOOOOOOO
OX                 O
O     OO  OO  OO   O
O     OO  OO  OO   O
O     O        O   O
O X   |   XX   OX XO
OOO-O-OO OOOO OOO_OO
O               X XO
O                  O
O    A             O
U    O    OXO  O   O
O         O    O   O
O         OOOAAO   O
U     X            O
O                  O
O          X X  O  O
O   W       X OOOO O
U           X   O  O
O                  O
OOOOOUOOOOOOOOOOOOOO
}